
Code Camp Demonstration app
Hybrid MVC / AngularJS mini-SPA app using Identity Server v3 for Auth

**********************************************************************
PART A - Initial application ending with ~ MVC5NgDemo at end of Part A 
**********************************************************************

1) Create MVCDemo web app - MVC + WebAPI with No Authentication
2) Rename solution to MVCNgDemo, rename project file
3) Package Updates
	bootstrap to 3.1.1
	Mvc to 5.2.2
	gets WebPages 3.2.2
	gets Razor 3.2.2
	Newtonsoft.Json 6.0.4
	jQuery to 2.1.1
	WebApi.WebHost to 5.2.2
	gets WebApi.Client 5.2.2
	gets WebApi.Core 5.2.2
	WebApi.HelpPage to 5.2.2
	(updates _ViewStart.cshtml)
	WebApi to 5.2.2
	WebGrease to 1.6.0
4) Added Packages
	EntityFramework 6.1.1
	AngularJS.Route 1.3.0
	gets AngularJS.Core 1.3.0
5) Separated out views for _TopNav and _Footer
6) Added render section "headend" to _Layout
7) Moved meta for viewport down
8) Added script to save root path from MVC for JavaScript
9) Added conditional code to Bundle.Config to turn off optimizations for DEBUG
10) Created projects BGoodMusic.Models and BGoodMusic.EFDAL
11) Added EF to both projects
12) Added AfterBuildOutputCopy.targets to both projects
13) Added Rehearsal to Model
14) Added IBGoodMusicRepository and BGoodMusicDBContext to EFDAL project.
15) Added Migrations to EFDAL project
16) Created first migration for initial schema, saved SQL script
17) Created database for development (used by EDFAL), applied script from step 16
18) Created database for web site, applied script to create table
19) Moved Values WebAPI controller to API folder
20) Added 3 rehearsals to database using SSMS and editing the table
21) Added references to BGoodMusic assemblies in web app
22) Added WebAPI controller for Rehearsals
23) Uninstall Modernizr
24) Uninstall Respond
25) Added CamelCasePropertyNamesContractResolver to WebApiConfig.cs
26) updated to bootstrap 3.2.0
27) Added Music controller, Rehearsals method, view files for Index
28) Added attribute routing

************************************************************
PART B - Adding Auth using Thinktecture Identity Server v3
(Includes getting refresh token)
************************************************************
1) Add Startup class to web project
2) Install packages
    Microsoft.Owin.Host.Systemweb (3.0.0)
        also gets
        Owin (1.0.0)
        Microsoft.Owin (3.0.0)
    Microsoft.Owin.Security.Cookies (3.0.0)
        also gets
        Microsoft.Owin.Security (3.0.0)
    Microsoft.Owin.Security.OpenIdConnect (3.0.0)
        also gets
        System.IdentityModel.Tokens.Jwt (4.0.0)
        Microsoft.IdentityModel.Protocol.Extensions (1.0.0)
    Thinktecture.IdentityModel.Owin.ResourceAuthorization.Mvc (2.0.0)
        also gets
        Thinktecture.IdentityModel.Owin.ResourceAuthorization (1.0.1)
        Thinktecture.IdentityModel.Core (1.2.0)
	Thinktecture.IdentityModel.Client (2.3.0)
		also gets
		Microsoft.Bcl (1.1.9)
		Microsoft.Bcl.Build (1.0.14)
		Microsoft.Net.Http (2.2.28)

3) Added implementation code in Startup - modeled on code from:
	https://github.com/thinktecture/Thinktecture.IdentityServer.v3.Samples/blob/master/source/Clients/MVC%20OWIN%20Client%20(Hybrid)/Startup.cs
4) Added Infrastructure\Constants for constants used in Startup that were in IdentityServer
5) Added AuthorizeAttribute to RegisterGlobalFilters in FilterConfig
6) Added Auth controller and views
7) Added shared view _LoginPartial
8) Added Test controller, ViewModels and Views

********************************************
PART D - AngularJS mini-SPA for Auth testing
********************************************

** Initial structure for Angular test app (mini-SPA)

1) added folders app, app\test
2) added Angular (Ng) module appTest.js
3) added Ng factory appTest.config.js
4) added Ng module testconfig.route.js
5) added Ng controller testMain.js and view testMain.html
6) Test - ensure Angular page shows up on "Angular Test" MVC page

***

7) Added packages:
	Microsoft.AspNet.WebApi.Owin (5.2.2)
	Microsoft.Owin.Security.Jwt (3.0.0)
	Microsoft.Owin.Security.OAuth (3.0.0)
	Thinktecture.IdentityServer.v3.AccessTokenValidation (1.6.0)
8) Added API controller TestAuthInfoController and data models in Models\Test
9) Added DemoControllerBase with methods to support setup of token for Angular app
	Along with supporting definitions in LocalClaimTypes, and methods in ClaimsHelper.
	Added DemoControllerBase, API\TestAuthInfoController
	Infrastructure\ClaimsHelper
	Constants\LocalClaimTypes
	ViewModels\Shared\TokenInfo.cs
	ViewModels\Test\AngularTest.cs
	Views\Test\AngularTest.cshtml
10) Added AngularTest method in Test controller to set up for Angular Test app
11) Updated WebApiConfig:
	Added SuppressDefaultHostAuthentication
	Added new HostAuthenticationFilter(OAuthDefaults.AuthenticationType)
	Added new AuthorizeAttribute
12) Startup - 
	Added ability to configure some properties with values from web.config
	Added code with ifdef to use allow switch between use of Reference Token and Jwt
13) Test - log in, use Angular test to get back claims info passed to WebAPI call in token
14) Change #ifdef in Startup and code in Id Server to use Jwt instead of Reference Token
	Test

***********************************************
PART E - AngularJS mini-SPA for Auth rehearsals
***********************************************

1) copied in js and html files from app/music
2) copied appRehearsals.js
3) copied Rehearsals action method in Music controller (server side)
4) copied ViewModels\Music\RehearsalViewModel.cs
5) added ActionLink in Music\Index.cshtml
6) copied in Rehearsals.cshtml
7) added ActionLink to Rehearsals (Ng) in _TopNav
8) added Ng factory authInterceptorService.js
9) updated ViewModels\Music\RehearsalViewModel - added JsonToken
10) modified MusicController (server side) to inherit from DemoControllerBase
11) added code to MusicController.Rehearsals to get access token
	(modeled on code in method AngularTest in TestController)
12) added appRehearsals.config.js as appConfig (copied/adapted from Test instance)
13) added authInterceptorService to $httpProvider in appRehearsals
14) added Ng controller and view for authError
15) Test - Rehearsals (Ng), Edit button, links to Ng editor from Rehearsals (MVC) list
